---
import Layout from '../../layouts/Layout.astro';
import HeaderSup from '../../components/HeaderSup.astro';
import Footer from '../../components/Footer.astro';
import DescripcionProducto from '../../components/DescripcionProducto.astro';
import Productos from "../../components/Productos.astro";
import { getProducts } from '../../data/request';

export const prerender = true;

const products = await getProducts();

export async function getStaticPaths() {
    const products = await getProducts();
    const paths = products.map(product => ({ params: { id: product.id } }));
    return paths;
}

let { id } = Astro.params;

let product = products.find(item => item.id === id);

let relatedProducts = products.filter(item => (item.id !== product?.id && item.subcategoria === product?.subcategoria) || item.categoria === product?.categoria).sort(() => Math.random() - 0.5).slice(0, 4);
---

<Layout title={`${product?.nombre} | Tecny`}>
	<header>
		<HeaderSup />
	</header>
	<main>
		<DescripcionProducto id={product?.id} nombre={product?.nombre} precio={product?.precio} descripcion={product?.descripcion} src={product?.src} categoria={product?.categoria} />
        <section>
            <h2 class="text-center text-morado-primario text-[40px] font-bold">Productos Relacionados</h2>
            <div class="flex justify-center my-5">
                {relatedProducts.map((item, index) => {
                        return (
                            <Productos id={item.id} nombre={item.nombre} precio={item.precio} cantidad={1} src={item.src} className={index%4 === 0 ? '':'mr-5'}/>
                        ) 
                    }
                )}
            </div>
        </section>
	</main>
	<footer>
		<Footer />
	</footer>
</Layout>

<style is:global>
    * {
        color: white;
        font-family: 'KoPub Batang';
        font-weight: 400;
        word-wrap: break-word;
    }
</style>